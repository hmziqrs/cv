# Sample workflow for building and deploying a Rust Dioxus site to GitHub Pages
#
# To get started with Dioxus see: https://dioxuslabs.com/docs/0.4/guide/en/
#
name: Deploy Rust CV to Pages

on:
  push:
    branches: ["master"]
    paths-ignore:
      - 'scripts/**'
      - '.github/workflows/build-stripper.yml'
      - '.github/workflows/build-chrome-capture.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  ENV_VARS: ${{ vars.ENV_VARS }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: install node modules
        run: bun install

      - name: tailwind build
        run: bun tailwind:build

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-binstall
        run: cargo install cargo-binstall

      - name: Install Dioxus CLI binary
        run: cargo binstall dioxus-cli

      - name: Build static site
        run: dx build --platform web --release --ssg
      
      - name: Download latest stripper binary
        run: |
          mkdir -p ./bin
          LATEST_STRIPPER_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[] | select(.name | startswith("Stripper Script Binary")) | .tag_name' | sort -r | head -n 1)
          if [ -z "$LATEST_STRIPPER_RELEASE" ]; then
            echo "Error: No stripper release found. Please run the stripper build workflow first."
            exit 1
          else
            echo "Found latest stripper release: $LATEST_STRIPPER_RELEASE"
            curl -L https://github.com/${{ github.repository }}/releases/download/$LATEST_STRIPPER_RELEASE/stripper-linux-amd64 -o ./bin/stripper
            chmod +x ./bin/stripper
          fi

      - name: Download latest chrome_capture binary
        run: |
          mkdir -p ./bin
          LATEST_CHROME_RELEASE=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[] | select(.name | startswith("Chrome Capture Script Binary")) | .tag_name' | sort -r | head -n 1)
          if [ -z "$LATEST_CHROME_RELEASE" ]; then
            echo "Error: No chrome_capture release found. Please run the chrome-capture build workflow first."
            exit 1
          else
            echo "Found latest chrome_capture release: $LATEST_CHROME_RELEASE"
            curl -L https://github.com/${{ github.repository }}/releases/download/$LATEST_CHROME_RELEASE/chrome-capture-linux-amd64 -o ./bin/chrome_capture
            chmod +x ./bin/chrome_capture
          fi

      - name: Optimize HTML with stripper
        run: ./bin/stripper

      - name: Take CV snapshots
        run: ./bin/chrome_capture local

      - name: Copy CV files to build directory
        run: |
          mkdir -p target/dx/cv/release/web/public/files
          cp public/files/hmziqrs-dark-cv.jpg target/dx/cv/release/web/public/files/hmziqrs-dark-cv.jpg
          cp public/files/hmziqrs-dark-cv.pdf target/dx/cv/release/web/public/files/hmziqrs-dark-cv.pdf
          cp public/files/hmziqrs-light-cv.jpg target/dx/cv/release/web/public/files/hmziqrs-light-cv.jpg
          cp public/files/hmziqrs-light-cv.pdf target/dx/cv/release/web/public/files/hmziqrs-light-cv.pdf

      - name: Deploy cloudflare pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./target/dx/cv/release/web/public --project-name=hmziqrs-cv --branch=main

      - uses: actions/upload-artifact@v4
        with:
          name: "hmziqrs-dark-cv.jpg"
          path: "public/files/hmziqrs-dark-cv.jpg"

      - uses: actions/upload-artifact@v4
        with:
          name: "hmziqrs-dark-cv.pdf"
          path: "public/files/hmziqrs-dark-cv.pdf"

      - uses: actions/upload-artifact@v4
        with:
          name: "hmziqrs-light-cv.jpg"
          path: "public/files/hmziqrs-light-cv.jpg"

      - uses: actions/upload-artifact@v4
        with:
          name: "hmziqrs-light-cv.pdf"
          path: "public/files/hmziqrs-light-cv.pdf"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./target/dx/cv/release/web/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
